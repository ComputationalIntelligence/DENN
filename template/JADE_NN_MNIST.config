//info
var workers threads()+1, seed date("%S%H%d%m%Y")
//dataset
var
{
    input "datasets/mnist_normalized.db.gz"
    batch 200
    batch_size $batch
    batch_offset $batch
    validation true
}
//denn
var
{
    gens 1500
    sub_gens $batch / 10
    np 28*28
    clamp 1
    crossover interm
    compute_test_per_pass false
}
//output
var output "JADE_NN_MNIST.json", stream "::cout"
////////////////////////////////////////////////////////
//network
network
{
    fc[/*auto*/] sigmoid
    softmax
}

//Batch info
dataset $input
batch_size $batch_size
batch_offset $batch_offset
use_validation $validation 
compute_test_per_pass $compute_test_per_pass
reval_pop_on_batch true

//DE Params
evolution_method JADE 
{
    //jade params
    archive_size 0
    //mutations
    mutation curr_p_best
    //crossover
    crossover $crossover
}
generations $gens
sub_gens $sub_gens
number_parents $np

//init individuals
distribution uniform {
    uniform_min -$clamp
    uniform_max  $clamp
}
clamp_max  $clamp
clamp_min  -$clamp


//threads, seed, and output
threads_pop $workers
seed $seed
output "results/" + $output
runtime_output_file $stream
